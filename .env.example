# PostgreSQL Database (Neon)
DATABASE_URL=postgres://postgres:postgres@db.localtest.me:5432/main

# Clerk authentication
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_test_your-publishable-key
CLERK_SECRET_KEY=sk_test_your-secret-key

# UploadThing configuration
UPLOADTHING_TOKEN=your-uploadthing-token

# Stripe configuration
# Get these from https://dashboard.stripe.com/apikeys
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_your-publishable-key
STRIPE_SECRET_KEY=sk_test_your-secret-key

# For STRIPE_WEBHOOK_SECRET:
# Option 1: Production webhooks
# 1. Go to https://dashboard.stripe.com/webhooks
# 2. Add endpoint (URL: https://yourdomain.com/api/webhooks/stripe)
# 3. Add events: customer.subscription.created, updated, deleted, invoice.paid, invoice.payment_failed
# 4. Copy the "Signing secret" (starts with whsec_)
#
# Option 2: Local development (using Stripe CLI)
# 1. Install Stripe CLI: https://stripe.com/docs/stripe-cli
# 2. Run: stripe login
# 3. Run: stripe listen --forward-to http://localhost:3000/api/webhooks/stripe
# 4. Copy the webhook signing secret provided by the CLI. It will look like this:
#    "Ready! Your webhook signing secret is whsec_abc123... (^C to quit)"
# 5. Copy this whsec_... value to your .env.local file
# 
# IMPORTANT: 
# - Make sure /api/webhooks/stripe is added to the public routes in middleware.ts
#   to allow Stripe webhooks to bypass authentication
# - The 400 Bad Request errors in webhooks occur when the signing secret is incorrect
# - Each time you restart the Stripe CLI, it generates a new webhook signing secret
STRIPE_WEBHOOK_SECRET=whsec_your-webhook-secret

# Create a subscription product in Stripe Dashboard:
# 1. Go to https://dashboard.stripe.com/products
# 2. Create a product (â‚¬30/month) with 30-day trial
# 3. Under "Additional options" set:
#    - Default payment collection method: "Use the payment method used for the initial payment"  
#    - When trial ends without a payment method: "Cancel the subscription"
# 4. Copy the Price ID (starts with price_)
STRIPE_PRICE_ID=price_your-price-id

NEXT_PUBLIC_BASE_URL=http://localhost:3000

# PostHog configuration
NEXT_PUBLIC_POSTHOG_KEY=your-posthog-key
NEXT_PUBLIC_POSTHOG_HOST=https://app.posthog.com

# Google Maps API
# To set up your Google Maps API key:
# 1. Go to https://console.cloud.google.com/
# 2. Create a new project (or select an existing one)
# 3. Navigate to "APIs & Services" > "Library"
# 4. Search for and enable the following APIs:
#    - Maps JavaScript API
#    - Places API
#    - Geocoding API
# 5. Go to "APIs & Services" > "Credentials"
# 6. Click "Create Credentials" > "API Key"
# 7. Restrict the key to the above APIs and your website domain
# 8. Copy the API key and paste it below
NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=your-google-maps-api-key

NEXT_PUBLIC_FACEBOOK_PIXEL_ID=your-facebook-pixel-id
